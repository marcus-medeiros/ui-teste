import streamlit as st
import time

# --- Configura√ß√£o da P√°gina ---
# √â uma boa pr√°tica configurar o t√≠tulo da p√°gina e o √≠cone no in√≠cio do script.
st.set_page_config(
    page_title="Demonstra√ß√£o de Menus Interativos",
    page_icon="üëá",
    layout="wide",
)

# --- T√≠tulo Principal ---
st.title("Guia Completo de Widgets Interativos no Streamlit")
st.markdown("""
Esta aplica√ß√£o demonstra os principais widgets que voc√™ pode usar para criar menus,
barras laterais e outras formas de intera√ß√£o com o usu√°rio no Streamlit.
""")

# ==============================================================================
# 1. BARRA LATERAL (SIDEBAR) - O "MENU" PRINCIPAL
# ==============================================================================

st.header("1. A Barra Lateral (`st.sidebar`)")
st.info(
    """
    A barra lateral √© o local mais comum para colocar a navega√ß√£o principal da sua aplica√ß√£o.
    Qualquer elemento do Streamlit pode ser adicionado √† sidebar usando `st.sidebar.*`.
    """
)

# Adicionando um menu de r√°dio na barra lateral para navega√ß√£o
with st.sidebar:
    st.image("https://streamlit.io/images/brand/streamlit-logo-secondary-colormark-darktext.png", width=200)
    st.header("Menu de Navega√ß√£o")
    
    escolha_pagina = st.radio(
        "Escolha uma se√ß√£o para visualizar:",
        ("P√°gina Inicial", "Seletores de Op√ß√µes", "Entrada de Dados", "Bot√µes e A√ß√µes"),
        key="menu_principal"
    )
    
    st.markdown("---")
    st.markdown("Feito com ‚ù§Ô∏è pelo Streamlit.")

# ==============================================================================
# L√ìGICA DE NAVEGA√á√ÉO BASEADA NA ESCOLHA DA SIDEBAR
# ==============================================================================

# O restante do seu app ser√° renderizado com base na escolha feita na sidebar.
# Isso cria uma experi√™ncia de "m√∫ltiplas p√°ginas" em um √∫nico script.

if escolha_pagina == "P√°gina Inicial":
    st.header("Bem-vindo(a) √† P√°gina Inicial!")
    st.markdown(
        """
        Use o menu na barra lateral √† esquerda para navegar entre as diferentes
        demonstra√ß√µes de widgets interativos. Cada se√ß√£o explicar√° um tipo diferente
        de funcionalidade que voc√™ pode usar para criar menus e interagir com seus usu√°rios.
        """
    )
    st.image("https://storage.googleapis.com/streamlit-public-media/animation/share-feat-1.gif")


# --- Se√ß√£o de Seletores de Op√ß√µes ---
elif escolha_pagina == "Seletores de Op√ß√µes":
    st.header("2. Seletores de Op√ß√µes")
    st.markdown("Esses widgets permitem que o usu√°rio escolha uma ou mais op√ß√µes de uma lista.")

    st.subheader("Caixa de Sele√ß√£o (`st.selectbox`)")
    st.markdown("Ideal para quando o usu√°rio deve escolher **apenas uma op√ß√£o** de uma lista suspensa.")
    
    opcao_selectbox = st.selectbox(
        'Qual √© a sua linguagem de programa√ß√£o favorita?',
        ('Python', 'JavaScript', 'Rust', 'Go', 'C++')
    )
    st.write('Sua escolha foi:', opcao_selectbox)
    st.code("opcao = st.selectbox('Qual √© a sua linguagem favorita?', ('Python', 'JavaScript'))")

    st.markdown("---")

    st.subheader("Sele√ß√£o M√∫ltipla (`st.multiselect`)")
    st.markdown("Permite que o usu√°rio escolha **v√°rias op√ß√µes** de uma lista.")
    
    opcoes_multiselect = st.multiselect(
        'Quais tecnologias voc√™ usa no seu dia a dia?',
        ['Streamlit', 'Pandas', 'NumPy', 'Matplotlib', 'Scikit-learn', 'TensorFlow', 'PyTorch'],
        default=['Streamlit', 'Pandas']  # Op√ß√µes pr√©-selecionadas
    )
    st.write('Voc√™ selecionou:', opcoes_multiselect)
    st.code("opcoes = st.multiselect('Quais tecnologias voc√™ usa?', ['Streamlit', 'Pandas'], default=['Streamlit'])")

    st.markdown("---")

    st.subheader("Bot√µes de R√°dio (`st.radio`)")
    st.markdown("Similar ao selectbox, mas exibe todas as op√ß√µes de uma vez. Bom para listas curtas.")
    
    opcao_radio = st.radio(
        "Qual seu n√≠vel de experi√™ncia com Streamlit?",
        ('Iniciante', 'Intermedi√°rio', 'Avan√ßado'),
        horizontal=True  # Op√ß√£o para exibir na horizontal
    )
    st.write(f"Seu n√≠vel de experi√™ncia √©: **{opcao_radio}**")
    st.code("opcao = st.radio('Qual seu n√≠vel?', ('Iniciante', 'Intermedi√°rio'), horizontal=True)")


# --- Se√ß√£o de Entrada de Dados ---
elif escolha_pagina == "Entrada de Dados":
    st.header("3. Widgets de Entrada de Dados")
    st.markdown("Use estes widgets para coletar informa√ß√µes do usu√°rio.")

    st.subheader("Entrada de Texto (`st.text_input`)")
    nome_usuario = st.text_input("Qual √© o seu nome?", "Visitante")
    st.write(f"Ol√°, {nome_usuario}!")
    st.code("nome = st.text_input('Qual √© o seu nome?', 'Visitante')")

    st.markdown("---")

    st.subheader("Entrada Num√©rica (`st.number_input`)")
    idade = st.number_input("Insira sua idade:", min_value=0, max_value=120, value=25, step=1)
    st.write(f"Voc√™ tem {idade} anos.")
    st.code("idade = st.number_input('Insira sua idade:', min_value=0, value=25)")

    st.markdown("---")

    st.subheader("Slider (`st.slider`)")
    st.markdown("Para selecionar um valor dentro de um intervalo.")
    
    nivel_satisfacao = st.slider(
        "Qual o seu n√≠vel de satisfa√ß√£o com este guia? (de 1 a 10)",
        min_value=1,
        max_value=10,
        value=8,
        help="1 = Nada Satisfeito, 10 = Totalmente Satisfeito"
    )
    st.write(f"N√≠vel de satisfa√ß√£o selecionado: {nivel_satisfacao}")
    st.code("nivel = st.slider('Qual seu n√≠vel de satisfa√ß√£o?', 1, 10, 8)")
    
# --- Se√ß√£o de Bot√µes e A√ß√µes ---
elif escolha_pagina == "Bot√µes e A√ß√µes":
    st.header("4. Bot√µes e A√ß√µes")
    st.markdown("Use bot√µes para disparar a√ß√µes ou eventos na sua aplica√ß√£o.")

    st.subheader("Bot√£o (`st.button`)")
    st.markdown("Executa uma a√ß√£o quando clicado. O c√≥digo dentro do `if` s√≥ roda ap√≥s o clique.")

    if st.button("Clique aqui para ver uma m√°gica!"):
        st.balloons()
        st.success("M√°gica realizada com sucesso!")
    st.code("""
if st.button('Clique aqui'):
    st.balloons()
""")

    st.markdown("---")

    st.subheader("Checkbox (`st.checkbox`)")
    st.markdown("Use para ligar ou desligar uma op√ß√£o. O estado (marcado/desmarcado) √© mantido.")
    
    if st.checkbox("Mostrar c√≥digo-fonte desta se√ß√£o"):
        st.code("""
if st.checkbox("Mostrar c√≥digo-fonte"):
    st.code("...")
""")

    st.markdown("---")
    
    st.subheader("Abas (`st.tabs`)")
    st.markdown("Uma forma moderna de organizar conte√∫do em se√ß√µes, sem recarregar a p√°gina.")
    
    tab1, tab2, tab3 = st.tabs(["üìà Gr√°fico", "üóÉÔ∏è Dados", "üñºÔ∏è Imagem"])

    with tab1:
        st.header("Um gr√°fico de exemplo")
        st.line_chart([10, 20, 15, 25, 30, 20, 40])

    with tab2:
        st.header("Uma tabela de dados")
        st.dataframe({
            'Coluna A': [1, 2, 3, 4],
            'Coluna B': [10, 20, 30, 40]
        })

    with tab3:
        st.header("Uma imagem aleat√≥ria")
        st.image("https://picsum.photos/400/300", caption="Imagem gerada aleatoriamente")
        
    st.code("""
tab1, tab2 = st.tabs(["Gr√°fico", "Dados"])

with tab1:
    st.line_chart(...)

with tab2:
    st.dataframe(...)
""")

    st.markdown("---")
    st.subheader("Expansor (`st.expander`)")
    st.markdown("Use para ocultar conte√∫do que n√£o precisa ser visto o tempo todo.")

    with st.expander("Clique aqui para ver mais detalhes"):
        st.write("""
        Esta √© uma √°rea de conte√∫do que s√≥ aparece quando o usu√°rio clica no expansor.
        √â muito √∫til para tutoriais, se√ß√µes de ajuda ou informa√ß√µes secund√°rias que podem
        poluir a interface se estiverem sempre vis√≠veis.
        """)
        st.image("https://streamlit.io/images/brand/streamlit-mark-color.png", width=50)

    st.code("""
with st.expander("Clique para ver mais"):
    st.write("Conte√∫do oculto...")
""")